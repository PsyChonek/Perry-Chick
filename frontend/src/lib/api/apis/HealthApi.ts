/* tslint:disable */
/* eslint-disable */
/**
 * Perry Chick API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  StringDateTimeStringfAnonymousType1,
  StringStringStringDateTimefAnonymousType0,
} from '../models/index';
import {
    StringDateTimeStringfAnonymousType1FromJSON,
    StringDateTimeStringfAnonymousType1ToJSON,
    StringStringStringDateTimefAnonymousType0FromJSON,
    StringStringStringDateTimefAnonymousType0ToJSON,
} from '../models/index';

/**
 * 
 */
export class HealthApi extends runtime.BaseAPI {

    /**
     */
    async getRootRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StringStringStringDateTimefAnonymousType0>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StringStringStringDateTimefAnonymousType0FromJSON(jsonValue));
    }

    /**
     */
    async getRoot(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StringStringStringDateTimefAnonymousType0> {
        const response = await this.getRootRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async healthCheckRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StringDateTimeStringfAnonymousType1>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/health`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StringDateTimeStringfAnonymousType1FromJSON(jsonValue));
    }

    /**
     */
    async healthCheck(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StringDateTimeStringfAnonymousType1> {
        const response = await this.healthCheckRaw(initOverrides);
        return await response.value();
    }

}
