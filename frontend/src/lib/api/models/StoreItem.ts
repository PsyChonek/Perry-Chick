/* tslint:disable */
/* eslint-disable */
/**
 * Perry Chick API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StoreItem
 */
export interface StoreItem {
    /**
     * 
     * @type {number}
     * @memberof StoreItem
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof StoreItem
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof StoreItem
     */
    description: string;
    /**
     * 
     * @type {number}
     * @memberof StoreItem
     */
    price?: number;
    /**
     * 
     * @type {number}
     * @memberof StoreItem
     */
    stock?: number;
    /**
     * 
     * @type {Date}
     * @memberof StoreItem
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof StoreItem
     */
    updatedAt?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof StoreItem
     */
    isActive?: boolean;
}

/**
 * Check if a given object implements the StoreItem interface.
 */
export function instanceOfStoreItem(value: object): value is StoreItem {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function StoreItemFromJSON(json: any): StoreItem {
    return StoreItemFromJSONTyped(json, false);
}

export function StoreItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'description': json['description'],
        'price': json['price'] == null ? undefined : json['price'],
        'stock': json['stock'] == null ? undefined : json['stock'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'isActive': json['isActive'] == null ? undefined : json['isActive'],
    };
}

export function StoreItemToJSON(json: any): StoreItem {
    return StoreItemToJSONTyped(json, false);
}

export function StoreItemToJSONTyped(value?: StoreItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'price': value['price'],
        'stock': value['stock'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] === null ? null : ((value['updatedAt'] as any)?.toISOString()),
        'isActive': value['isActive'],
    };
}

